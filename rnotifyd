#!/usr/bin/env python

# A heavily simplified version of the `statnot` notification daemon.

import dbus
import dbus.service
import dbus.mainloop.glib
import gobject
import socket
import os

IP = os.getenv('IP', '127.0.0.1')
PORT = os.getenv('PORT', 1337)

class NotificationFetcher(dbus.service.Object):
    _id = 0

    @dbus.service.method('org.freedesktop.Notifications',
                         in_signature='susssasa{ss}i',
                         out_signature='u')
    def Notify(self, app_name, notification_id, app_icon,
               summary, body, actions, hints, expire_timeout):
        text = ('%s %s' % (summary, body)).strip()

        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.connect((IP, PORT))
        s.send(text)

        self._id += 1
        return self._id

    @dbus.service.method("org.freedesktop.Notifications", in_signature='', out_signature='as')
    def GetCapabilities(self):
        return ("body")

    @dbus.service.signal('org.freedesktop.Notifications', signature='uu')
    def NotificationClosed(self, id_in, reason_in):
        pass

    @dbus.service.method("org.freedesktop.Notifications", in_signature='u', out_signature='')
    def CloseNotification(self, id):
        pass

    @dbus.service.method("org.freedesktop.Notifications", in_signature='', out_signature='ssss')
    def GetServerInformation(self):
      return ("rnotifyd", "http://FIXME", "1.0.0", "1")

if __name__ == '__main__':
    dbus.mainloop.glib.DBusGMainLoop(set_as_default=True)
    session_bus = dbus.SessionBus()
    name = dbus.service.BusName('org.freedesktop.Notifications', session_bus)
    nf = NotificationFetcher(session_bus, '/org/freedesktop/Notifications')

    context = gobject.MainLoop().get_context()

    while 1:
        context.iteration(True)
